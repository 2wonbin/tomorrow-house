/*
MOBILE (<768px)
fixture : sm
# of columns : 4
unit : 
margin: 5px
gutter : 20px
container-size: 100% - (5px *2)
*/

/*
Tablet (>768px)
fixture : md
# of columns : 12
unit : 
margin: 30px
gutter : 20px
container-size: 100% - (30px *2)
max-container-size : 960px
*/

/*
Desktop (> 1140px)
fixture : lg
# of columns : 4
unit : 
margin: 5px
gutter : 20px
container-size: 1140px
max-container-size :1140px

container : grid가 적용될 공간(범위)

*/
$gutter: 20px;

$sm-columns: 4;
$sm-margin: 5px;

$md-columns: 12;
$md-margin: 30px;
$md-max-container: 960px + $md-margin * 2;

$lg-columns: 12;
$lg-unit: 75px;
$lg-max-container: ($lg-unit + $gutter) * $lg-columns;

// @debug (($lg-unit + $gutter) * $lg-columns);

.container {
  width: 100%;
  padding: 0 $sm-margin;
  margin: 0 auto; /*화면 중앙 정렬*/

  .row {
    display: flex;
    flex-wrap: wrap;
  }

  // .col-sm-1, col-md-2, col-lg-3
  [class^='col-'] {
    // '^=' :해당 키워드를 클래스로 지닌 요소들 모두
    padding: 0 $gutter / 2;
  }

  @for $i from 1 through $sm-columns {
    .col-sm-#{$i} {
      // width: $i / $sm-columns * 100%;
      width: percentage($i / $sm-columns);
    }
  }

  @include responsive(T) {
    max-width: $md-max-container;
    padding: 0 $md-margin;

    @for $i from 1 through $md-columns {
      .col-md-#{$i} {
        width: percentage($i / $md-columns);
      }
    }
  }
  @include responsive(D) {
    max-width: $lg-max-container;
    padding: 0;

    @for $i from 1 through $lg-columns {
      .col-lg-#{$i} {
        width: ($lg-unit + $gutter) * $i;
      }
    }
  }
}
